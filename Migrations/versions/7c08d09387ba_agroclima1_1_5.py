"""AgroClima1.1-5

Revision ID: 7c08d09387ba
Revises: 49c0dbae2f4e
Create Date: 2024-05-20 21:42:47.483642

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '7c08d09387ba'
down_revision: Union[str, None] = '49c0dbae2f4e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('roles', sa.Column('user_id', sqlmodel.sql.sqltypes.GUID(), nullable=False))
    op.create_foreign_key(None, 'roles', 'user', ['user_id'], ['id'])
    op.drop_constraint('rolesty_id_key', 'rolesty', type_='unique')
    op.drop_constraint('user_id_key', 'user', type_='unique')
    op.drop_constraint('user_Roles_fkey', 'user', type_='foreignkey')
    op.drop_column('user', 'Roles')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('user', sa.Column('Roles', sa.UUID(), autoincrement=False, nullable=False))
    op.create_foreign_key('user_Roles_fkey', 'user', 'roles', ['Roles'], ['id'])
    op.create_unique_constraint('user_id_key', 'user', ['id'])
    op.create_unique_constraint('rolesty_id_key', 'rolesty', ['id'])
    op.drop_constraint(None, 'roles', type_='foreignkey')
    op.drop_column('roles', 'user_id')
    # ### end Alembic commands ###
